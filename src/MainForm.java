
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jalal Naveed
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }
    
    
    private static String getFileExtension(File file) {
        String fileName = file.getName();
        if(fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0)
        return fileName.substring(fileName.lastIndexOf(".")+1);
        else return "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        file1 = new javax.swing.JLabel();
        file2 = new javax.swing.JLabel();
        file3 = new javax.swing.JLabel();
        dataone = new javax.swing.JLabel();
        data2 = new javax.swing.JLabel();
        data3 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Add Files");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Add Three Files in it ");

        jLabel2.setText("Current Status");

        status.setText("No Activity yet");

        jButton2.setText("Check Score");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        file1.setText("No file selected");

        file2.setText("No file selected");

        file3.setText("No file selected");

        dataone.setText("nodata");

        data2.setText("nodata");

        data3.setText("nodata");

        jLabel3.setBackground(new java.awt.Color(0, 204, 204));
        jLabel3.setForeground(new java.awt.Color(204, 0, 255));
        jLabel3.setText("Enterprise Software File Scoring App");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(file2)
                            .addComponent(file1)
                            .addComponent(file3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataone)
                            .addComponent(status)
                            .addComponent(data2)
                            .addComponent(data3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 103, Short.MAX_VALUE)))))
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file1)
                    .addComponent(dataone))
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file2)
                    .addComponent(data2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file3)
                    .addComponent(data3))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(status))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
         
    if(filecount<4)
    {
        chooser = new JFileChooser(); 
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle(choosertitle);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
   
        chooser.setAcceptAllFileFilterUsed(false);
    //    
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
        { 
            file = new File(chooser.getSelectedFile().getAbsolutePath());
            System.out.println("File extension is: "+getFileExtension(file));
            if(getFileExtension(file).equalsIgnoreCase("java"))
            {
                filecount++;
                System.out.print("It is a java file"+filecount);
                status.setText(file.getName()+ "Total Files Selected "+ filecount);
                
                if(filecount==1)
                {
                    fileone=file;
                    file1.setText(fileone.getName());
                }
                else if(filecount==2)
                {
                    filetwo=file;
                    file2.setText(file.getName());
                }
                else if(filecount==3)
                {
                    filethree=file;
                    file3.setText(file.getName());
                }
            }
            else
            {
                file.delete();
            }
            
       /* System.out.println("getCurrentDirectory(): " 
             +  chooser.getCurrentDirectory());
            System.out.println("getSelectedFile() : " 
            +  chooser.getSelectedFile());*/
      }
    else {
      System.out.println("No Selection ");
      }
        
    }
    else 
    {
        status.setText("Cant Add More files");
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(filecount==3)
        {
            BufferedReader br = null;
		FileReader fr = null;

		try {

			//br = new BufferedReader(new FileReader(FILENAME));
			fr = new FileReader(fileone);
			br = new BufferedReader(fr);
                        String sCurrentLine;
			while ((sCurrentLine = br.readLine()) != null) {
                            totallinesin1s++;
                            if(sCurrentLine.contains("//")||sCurrentLine.contains("/*"))
                            {
                                totalcommentlinesin1st++;
                            }
                            if(sCurrentLine.length()>4)
                            {
                                totalscoreof1st++;
                            }
				System.out.println(sCurrentLine);
			}
                        dataone.setText("<html>Total Lines Of Code is "+totallinesin1s+"<br/> Total Lines with Comments"+totalcommentlinesin1st+"<br/>Total Score Lines"+totalscoreof1st+"<html>");
                        

		} catch (IOException e) {

			e.printStackTrace();

		} finally {

			try {

				if (br != null)
					br.close();

				if (fr != null)
					fr.close();
                                

			} catch (IOException ex) {

				ex.printStackTrace();

			}
                        
                      

		}
                FileReader fr1=null;
                        BufferedReader br1=null;

		try {

			//br = new BufferedReader(new FileReader(FILENAME));
			 fr1 = new FileReader(filetwo);
			 br1 = new BufferedReader(fr1);
                        String sCurrentLine;
			while ((sCurrentLine = br1.readLine()) != null) {
                            totallinesin2s++;
                            if(sCurrentLine.contains("//")||sCurrentLine.contains("/*"))
                            {
                                totalcommentlinesin2st++;
                            }
                            if(sCurrentLine.length()>4)
                            {
                                totalscoreof2st++;
                            }
				System.out.println(sCurrentLine);
			}
                        data2.setText("<html>Total Lines Of Code is "+totallinesin2s+"<br/> Total Lines with Comments"+totalcommentlinesin2st+"<br/>Total Score Lines"+totalscoreof2st+"<html>");
                        

		} catch (IOException e) {

			e.printStackTrace();

		} finally {

			try {

				if (br1 != null)
					br1.close();

				if (fr1 != null)
					fr1.close();

			} catch (IOException ex) {

				ex.printStackTrace();

			}
                        
                      

		}
                BufferedReader br2 = null;
		FileReader fr2 = null;

		try {

			//br = new BufferedReader(new FileReader(FILENAME));
			fr2 = new FileReader(filethree);
			br2 = new BufferedReader(fr2);
                        String sCurrentLine;
			while ((sCurrentLine = br2.readLine()) != null) {
                            totallinesin3s++;
                            if(sCurrentLine.contains("//")||sCurrentLine.contains("/*"))
                            {
                                totalcommentlinesin3st++;
                            }
                            if(sCurrentLine.length()>4)
                            {
                                totalscoreof3st++;
                            }
				System.out.println(sCurrentLine);
			}
                        data3.setText("<html>Total Lines Of Code is "+totallinesin3s+"<br/> Total Lines with Comments"+totalcommentlinesin3st+"<br/>Total Score Lines"+totalscoreof3st+"<html>");
                        

		} catch (IOException e) {

			e.printStackTrace();

		}/* finally {

			try {

				if (br2 != null)
					br2.close();

				if (fr2 != null)
					fr2.close();

			} catch (IOException ex) {

				ex.printStackTrace();

			}
                        
                      

		}*/
        }
        
    
        
        

	
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    JFileChooser chooser;
    String choosertitle;
    File file, fileone,filetwo,filethree;
    private int filecount=0;
    private int totallinesin1s,totalscoreof1st,totalcommentlinesin1st;
    private int totallinesin2s,totalscoreof2st,totalcommentlinesin2st;
    private int totallinesin3s,totalscoreof3st,totalcommentlinesin3st;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel data2;
    private javax.swing.JLabel data3;
    private javax.swing.JLabel dataone;
    private javax.swing.JLabel file1;
    private javax.swing.JLabel file2;
    private javax.swing.JLabel file3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
